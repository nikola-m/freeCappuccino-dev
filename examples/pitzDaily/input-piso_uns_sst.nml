&input_parameters
              title = 'Pitz-Daily backwad facing step'       ! Descriptive name of the case which will be written in monitor file.                      
        mesh_format = 'foamMesh'                     ! Mesh format 'nativeMesh' for native polyMesh format or 'foamMesh' for OpenFOAM polyMesh.
              lread = F                                ! Read restart file - continue simulation from saved state?  True/False.
              ltest = F                                ! Verbosity for linear solver convergence (for troubleshooting) True/False. 
        !
        ! Approximation details for velocity field.
        !
              calcU = T             ! Activate Velocity field caculation? True/False.
               urfU = 1.0, 1.0, 1.0   ! Under-relaxation factor for momentum eq
               gdsU = 1.0           ! gamma-deferred correction parameter for velocity
           cSchemeU = 'kappa'         ! Convection scheme for momentun eq
           dSchemeU = 'skewness'    ! Difussion scheme for momentum eq
            nrelaxU = 0             ! Integer parameter for difussion scheme - advanced
           lSolverU = 'bicgstab'    ! Linear algebraic solver for momentum eq
           maxiterU = 10            ! Max no of iterations for linear U-V-W equations
            tolAbsU = 1e-10         ! Absolute tolerance level for residual for linear U-V-W equations
            tolRelU = 1e-5          ! Relative tolerance level for residual for linear U-V-W equations
ScndOrderPressIntrp = F             ! Second order (default), or massflow weighted interpolation of pressure to faces.
        !
        ! Approximation details for pressure/pressure correction.
        !
              calcP = T             ! Activate Pressure field caculation? True/False.
               urfP = 1.0           ! Under-relaxation factor for pressure
           lSolverP = 'iccg'        ! Linear algebraic solver for pressure/pressure correction
           maxiterP = 200           ! Max no of iterations for pressure/pressure correction
            tolAbsP = 1e-10         ! Absolute tolerance level for residual for pressure/pressure correction
            tolRelP = 1e-6          ! Relative tolerance level for residual for pressure/pressure correction   
        !
        ! Physical model: Viscous flows - Laminar/Turbulent, Activation and model details.
        !
          TurbModel = 'k_omega_sst'         ! Turbulence model - defined by string code.    
                urf = 1.0 1.0 0.0 0.0 0.0 0.0 0.0 1.0 ! Under-relaxation factors. (Array of 8 values)
                gds = 1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0 ! Deferred correction factor. (Array of 8 values)
            cScheme = 'kappa' ! Convection scheme - default is second order upwind.
            dScheme = 'skewness'     ! Difussion scheme, i.e. the method for normal gradient at face skewness/offset.
             nrelax = 0              ! Relaxation parameter non-orthogonal correction for face gradient.
            lSolver = 'bicgstab'     ! Linear algebraic solver.
            maxiter = 20             ! Max number of iterations in linear solver.
             tolAbs = 1e-15          ! Absolute residual level.
             tolRel = 1e-5           ! Relative drop in residual to exit linear solver.
        !
        ! Definition of physical properties of fluid.
        !      
             densit = 1.0                 ! Fluid density [kg/m3]
             viscos = 1e-5             ! Molecular dynamic viscosity [Pa.s]       
              pranl = 0.71                ! Prandtl coefficient for specific fluid
               beta = 1e-3                ! Thermal expansion coefficient
        !
        ! Unsteady simulation
        !    
         ltransient = T           !% |Unsteady simulation True/False and chose ONE algorithm  below
                bdf = T           !% |Backward-Euler; First-Order Implicit, or...
               bdf2 = f           !% |Second-Order Backward Euler; Second-Order Implicit, or...
               bdf3 = f           !% |Third-order backard, or...
                 CN = f           !% |Crank-Nicolson.
        !
        ! Numerical approximation: Gradient approximation and limiting
        !
              lstsq = F           !@ |Gradient approximation, chose ONE: Unweighted Least-Square gradient approximation, or...
           lstsq_qr = F           !@ |Least square gradients based on thin QR decomposition, or...
           lstsq_dm = T           !@ |Distance-square weighted version of Least-Square Gradient, or...
              gauss = F           !@ |Cell based Gauss gradient with simple linear interpolation.
              nigrad = 1
            limiter = 'Venkatakrishnan'     ! Gradient limiter - default for all gradients
        !
        ! Solution method: pressure-velocity coupling
        !    
             SIMPLE = F       !# |Pressure-velocity coupling method - SIMPLE, or...
               PISO = T       !# |Pressure-velocity coupling method - PISO.
    AllSpeedsSIMPLE = F       !# SIMPLE for compressible flows. Activate Energy eqn.
              ncorr = 2       ! Number of PISO corrections - only relevant for PISO.
              npcor = 1       ! Number of iterations for pressure/pressure correction equation - Number of Nonorthogonal corrections.  
           pRefCell = 1       ! Reference cell for setting pressure level (since we have pure Neumann problem)
          tolerance = 1e-6    ! Desired level of convergence for SIMPLE iterations.
        !
        ! Simulation run details
        !
            numstep = 10000    ! Total number of timesteps.                   
           timestep = 2e-5      ! Timestep size  - also known as dt.
             nzapis = 100      ! Program writes output files every NZAPIS timesteps.
              maxit = 1        ! Number of iterations in SIMPLE/PISO sequential equation solution loop. 
           CoNumFix = F        !Co  |Adaptive timestep size based on target Courant number, True/False.
      CoNumFixValue = 1.0      !Co  |If CoNumFix=True then set target maximum Courant number here.
        const_mflux = f        !mdot | Do we have constant mass flow in the domain True/False.
            magUbar = 0.0      !mdot | Target bulk velocity for constant mass flow situation.
/

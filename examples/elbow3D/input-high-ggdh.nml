&input_parameters
              title = 'Elbow 3D'  ! Descriptive name of the case which will be written in monitor file.                      
        mesh_format = 'nativeMesh'                       ! Mesh format 'nativeMesh' for native polyMesh format or 'foamMesh' for OpenFOAM polyMesh.
              lread = T                                 ! Read restart file - continue simulation from saved state?  True/False.
              ltest = F                                ! Verbosity for linear solver convergence (for troubleshooting) True/False. 
        !
        ! Approximation details for velocity field.
        !
              calcU = T             ! Activate Velocity field caculation? True/False.
               urfU = 0.7, 0.7 0.7 ! Under-relaxation factor for momentum eq
               gdsU = 1.0           ! gamma-deferred correction parameter for velocity
           cSchemeU = 'linearUpwind'         ! Convection scheme for momentun eq
           dSchemeU = 'skewness'    ! Difussion scheme for momentum eq
            nrelaxU = 0             ! Integer parameter for difussion scheme - advanced
           lSolverU = 'bicgstab'    ! Linear algebraic solver for momentum eq
           maxiterU = 5             ! Max no of iterations for linear U-V-W equations
            tolAbsU = 1e-13         ! Absolute tolerance level for residual for linear U-V-W equations
            tolRelU = 0.01          ! Relative tolerance level for residual for linear U-V-W equations
            pscheme = 'weighted'
        !
        ! Approximation details for pressure/pressure correction.
        !
              calcP = T             ! Activate Pressure field caculation? True/False.
               urfP = 0.3           ! Under-relaxation factor for pressure
           lSolverP = 'iccg'        ! also good one: '-i cg -p saamg -tol 0.1 -maxiter 10' ! Linear algebraic solver for pressure/pressure correction   
           maxiterP = 200           ! Max no of iterations for pressure/pressure correction
            tolAbsP = 1e-13         ! Absolute tolerance level for residual for pressure/pressure correction
            tolRelP = 0.01          ! Relative tolerance level for residual for pressure/pressure correction   
        !
        ! Physical model: Viscous flows - Laminar/Turbulent, Activation and model details.
        !
          TurbModel = 'k_epsilon_rlzb'         ! Turbulence model - defined by string code.   
          TurbModel%Scalar(1)%gds = 1.0
          TurbModel%Scalar(2)%gds = 1.0
        !
        ! Physical model: Heat transfer, Temperature as energy equation, Activation and model details.
        !
              calcT = T                 ! Activate Temperature equation caculation? True/False.
              urfT = 0.9                ! Under-relaxation factors.
              gdsT = 1.0                ! Deferred correction factor.
              cSchemeT = 'linearUpwind' ! Convection scheme - default is second order upwind.
              dSchemeT = 'skewness'     ! Difussion scheme, i.e. the method for normal gradient at face skewness/offset.
              nrelaxT = 0               ! Relaxation parameter non-orthogonal correction for face gradient.
              lSolverT = 'bicgstab'     ! Linear algebraic solver.
              maxiterT = 20             ! Max number of iterations in linear solver.
              tolAbsT = 1e-15           ! Absolute residual level.
              tolRelT = 0.01            ! Relative drop in residual to exit linear solver.
              sigt = 0.9                ! sigma_t
        !
        ! Turbulent Heat flux model and underrelaxation for turb heat fluxes and RST.
        !
           lsgdh = F              !h Simple gradient hypothesis for heat-fluxes, or...
           lggdh = T             !h Generalized gradient hypothesis for heat fluxes, or...
           facflx = 1.0            !h Underrelaxation factor for heat fluxes
        !
        ! Physical model: Buoyancy 
        !
              lbuoy = F                     !g Buoyancy activated True/False
         Boussinesq = T                     !g Bousinesq approximation for buoyancy
               tref = 300.0                 ! Reference temperature for buoyant flows
              gravx = 0.0                   !g Three components of gravity vector
              gravy = -9.81                 !g - e.g. gravy = -9.81  
              gravz = 0.0                   !g -
        !
        ! Definition of physical properties of fluid.
        !      
             densit = 1.0                ! Fluid density [kg/m3]
             viscos = 8.0e-7                ! Molecular dynamic viscosity [Pa.s]       
              pranl = 4.982                   ! Prandtl coefficient for specific fluid
               beta = 1e-3                  ! Thermal expansion coefficient
        !
        ! Unsteady simulation
        !    
         ltransient = F           !% |Unsteady simulation True/False and chose ONE algorithm  below
                bdf = F           !% |Backward-Euler; First-Order Implicit, or...
               bdf2 = f           !% |Second-Order Backward Euler; Second-Order Implicit, or...
               bdf3 = f           !% |Third-order backard, or...
                 CN = f           !% |Crank-Nicolson.
        !
        ! Numerical approximation: Gradient approximation and limiting
        !
              lstsq = F           !@ |Gradient approximation, chose ONE: Unweighted Least-Square gradient approximation, or...
           lstsq_qr = F           !@ |Least square gradients based on thin QR decomposition, or...
           lstsq_dm = F           !@ |Distance-square weighted version of Least-Square Gradient, or...
              gauss = T           !@ |Cell based Gauss gradient with simple linear interpolation.
              nigrad = 1
            limiter = 'Barth-Jespersen'     ! Gradient limiter - default for all gradients
        !
        ! Solution method: pressure-velocity coupling
        !    
             SIMPLE = T       !# |Pressure-velocity coupling method - SIMPLE, or...
               PISO = F       !# |Pressure-velocity coupling method - PISO.
              ncorr = 1       ! Number of PISO corrections - only relevant for PISO.
              npcor = 1       ! Number of iterations for pressure/pressure correction equation - Number of Nonorthogonal corrections.  
           pRefCell = 1                     ! Reference cell for setting pressure level (since we have pure Neumann problem)
          tolerance = 1e-5    ! Desired level of convergence for SIMPLE iterations.
        !
        ! Simulation run details
        !
            numstep = 300      ! Total number of timesteps.                   
           timestep = 1.0     ! Timestep size  - also known as dt.
             nzapis = 100      ! Program writes output files every NZAPIS timesteps.
              maxit = 1        ! Number of iterations in SIMPLE/PISO sequential equation solution loop. 
           CoNumFix = f        !Co  |Adaptive timestep size based on target Courant number, True/False.
      CoNumFixValue = 1.0      !Co  |If CoNumFix=True then set target maximum Courant number here.
/
